// Code generated by aocgen; DO NOT EDIT.
package year2024

import (
	"testing"

	"aocgen/pkg/aoc"
)

func Benchmark2024Day01(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 1)
	p := aoc.NewPuzzle(2024, 1)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day02(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 2)
	p := aoc.NewPuzzle(2024, 2)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day03(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 3)
	p := aoc.NewPuzzle(2024, 3)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day04(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 4)
	p := aoc.NewPuzzle(2024, 4)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day05(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 5)
	p := aoc.NewPuzzle(2024, 5)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day06(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 6)
	p := aoc.NewPuzzle(2024, 6)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day07(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 7)
	p := aoc.NewPuzzle(2024, 7)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day08(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 8)
	p := aoc.NewPuzzle(2024, 8)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day09(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 9)
	p := aoc.NewPuzzle(2024, 9)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
func Benchmark2024Day10(b *testing.B) {
	Init()
	input := aoc.TestInput(2024, 10)
	p := aoc.NewPuzzle(2024, 10)
	b.Run("PartA", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartA(input)
		}
	})
	b.Run("PartB", func(b *testing.B) {
		b.ResetTimer()
		for i := 0; i < b.N; i++ {
			p.PartB(input)
		}
	})
}
